// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: hvnx4UaRLT5bKWhR7H1S1X
// Component: NWikQXDSJpDH

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Navbar from "../../Navbar"; // plasmic-import: XJhz53-ESI52/component
import Button from "../../Button"; // plasmic-import: ifGm70vZk4tf/component
import Section from "../../Section"; // plasmic-import: RyGCztqFJq1Y/component
import DiagramCard from "../../DiagramCard"; // plasmic-import: bZa85eOwTpAI/component
import ProductCard from "../../ProductCard"; // plasmic-import: 4HarEn2m8J0n/component
import DetailAbout from "../../DetailAbout"; // plasmic-import: fjwImTvMU27o/component
import PriceSection from "../../PriceSection"; // plasmic-import: JPjHh0Ym_f5I/component
import PriceCard from "../../PriceCard"; // plasmic-import: bU66GMCZcccC/component
import FooterSection from "../../FooterSection"; // plasmic-import: ysDKnOH-1O7Y/component

import { useScreenVariants as useScreenVariantstUatpkyEh71C } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: TUatpkyEh71C/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: hvnx4UaRLT5bKWhR7H1S1X/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: NWikQXDSJpDH/css

import CircleIcon from "./icons/PlasmicIcon__Circle"; // plasmic-import: AIpMzHuRtvey/icon
import IconArrowRightSvgIcon from "./icons/PlasmicIcon__IconArrowRightSvg"; // plasmic-import: EouegMbSvq1H/icon
import ChevronDownIcon from "./icons/PlasmicIcon__ChevronDown"; // plasmic-import: tCEaXGcEydsM/icon

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: Flex__<"div">;
  headerHeroSection?: Flex__<"div">;
  navbar?: Flex__<typeof Navbar>;
  h1?: Flex__<"h1">;
  svg?: Flex__<"svg">;
  diagramSection?: Flex__<typeof Section>;
  deviceSection?: Flex__<typeof Section>;
  productSection?: Flex__<typeof Section>;
  step1?: Flex__<typeof ProductCard>;
  aboutSection?: Flex__<typeof Section>;
  priceSection?: Flex__<typeof PriceSection>;
  startSection?: Flex__<typeof Section>;
  h3?: Flex__<"h3">;
  pricingSection?: Flex__<typeof Section>;
  footerSection?: Flex__<typeof FooterSection>;
};

export interface DefaultHomepageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantstUatpkyEh71C()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicHomepage.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Stack__
            as={"div"}
            data-plasmic-name={"headerHeroSection"}
            data-plasmic-override={overrides.headerHeroSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.headerHeroSection)}
          >
            <Navbar
              data-plasmic-name={"navbar"}
              data-plasmic-override={overrides.navbar}
              className={classNames("__wab_instance", sty.navbar)}
            />

            <div className={classNames(projectcss.all, sty.freeBox__tBmBm)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__dSeXq)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__fZssb)}>
                  <h1
                    data-plasmic-name={"h1"}
                    data-plasmic-override={overrides.h1}
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Analytics for developers can be better"
                      : "Meet the AI That Detects & Counters Gaslighting, DARVO, & Manipulation\u2014In Real Time."}
                  </h1>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__f6FXk
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                      : "\u2714 Detects Emotional Manipulation Instantly \u2192 Know when someone is Gaslighting or DARVO-ing you.\n\u2714 Provides Real-Time Counter-Responses \u2192 Learn how to shut it down.\n\u2714 Breaks the Cycle of Confusion & Guilt \u2192 Stop second-guessing yourself."}
                  </div>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__l3Ax)}
                  >
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__ddp3Z
                      )}
                      component={Link}
                      href={"#"}
                      platform={"nextjs"}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__fSMdh
                        )}
                        end={
                          <IconArrowRightSvgIcon
                            data-plasmic-name={"svg"}
                            data-plasmic-override={overrides.svg}
                            className={classNames(projectcss.all, sty.svg)}
                            role={"img"}
                          />
                        }
                        iconEnd={true}
                        label={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qh8Qz
                            )}
                          >
                            {"Try Demo For Free"}
                          </div>
                        }
                      />
                    </PlasmicLink__>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__naDk
                      )}
                      component={Link}
                      href={"#"}
                      platform={"nextjs"}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__civs4
                        )}
                        color={"blue"}
                        label={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__q88E
                            )}
                          >
                            {"Learn More"}
                          </div>
                        }
                        type={"bordered"}
                      />
                    </PlasmicLink__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__yU7Hr)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__yEyd6)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "0px"
                        : "661px"
                    }
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "100%"
                        : "100%"
                    }
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/narc_shield_io/images/diagramSvg.svg",
                      fullWidth: 173,
                      fullHeight: 150,
                      aspectRatio: 1.151631
                    }}
                  />
                </div>
              </Stack__>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__aDypS
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Powering with magnificant of Companies"
                  : "Powered with OpenAI ChatGPT models, but not affiliated or endorsed by OpenAI"}
              </div>
            </div>
          </Stack__>
          <PlasmicImg__
            alt={""}
            className={classNames(sty.img__bvfdC)}
            displayHeight={"auto"}
            displayMaxHeight={"none"}
            displayMaxWidth={"100%"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"774px"}
            loading={"lazy"}
            src={{
              src: "/plasmic/narc_shield_io/images/ellipseLeftPng.png",
              fullWidth: 469,
              fullHeight: 742,
              aspectRatio: undefined
            }}
          />

          <PlasmicImg__
            alt={""}
            className={classNames(sty.img__fsqo4)}
            displayHeight={"auto"}
            displayMaxHeight={"none"}
            displayMaxWidth={"100%"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"auto"}
            loading={"lazy"}
            src={{
              src: "/plasmic/narc_shield_io/images/ellipseRightPng.png",
              fullWidth: 437,
              fullHeight: 742,
              aspectRatio: undefined
            }}
          />

          <Section
            data-plasmic-name={"diagramSection"}
            data-plasmic-override={overrides.diagramSection}
            className={classNames("__wab_instance", sty.diagramSection)}
            size={
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? "mobile"
                : undefined
            }
          >
            <div className={classNames(projectcss.all, sty.freeBox__mNhv9)}>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__so3H
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Lorem ipsum dolor \nsit amet"
                  : "How does this work?"}
              </h2>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__bkfBr
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                  : "We have trained NarcShield AI with real life messages and communications from people using manipulation techniques. Using complex, rigorous and formal mathematical framework NarcShield AI is smarter, more capable, and better equipped to help you the exact nature of the manipulations in your life and how to effectively and safely counter them."}
              </div>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__gGiVy)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "249px"
                    : "100%"
                }
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/narc_shield_io/images/terminalPng.png",
                  fullWidth: 624,
                  fullHeight: 333,
                  aspectRatio: undefined
                }}
              />

              <PlasmicImg__
                alt={""}
                className={classNames(sty.img___8TUje)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "auto"
                    : "auto"
                }
                loading={"lazy"}
                src={{
                  src: "/plasmic/narc_shield_io/images/line1Png.png",
                  fullWidth: 11,
                  fullHeight: 150,
                  aspectRatio: undefined
                }}
              />

              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__mswSd)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "50px"
                    : "100%"
                }
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/narc_shield_io/images/lineBranchPng.png",
                  fullWidth: 100,
                  fullHeight: 100,
                  aspectRatio: undefined
                }}
              />

              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__zdzbl)}
                displayHeight={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "auto"
                    : "auto"
                }
                displayMaxHeight={"none"}
                displayMaxWidth={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "500px"
                    : "770px"
                }
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "auto"
                    : "auto"
                }
                loading={"lazy"}
                src={{
                  src: "/plasmic/narc_shield_io/images/line2Png.png",
                  fullWidth: 844,
                  fullHeight: 284,
                  aspectRatio: undefined
                }}
              />

              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___9Xhmt)}
              >
                <DiagramCard
                  className={classNames(
                    "__wab_instance",
                    sty.diagramCard__zz6S7
                  )}
                />

                <DiagramCard
                  className={classNames(
                    "__wab_instance",
                    sty.diagramCard__l6NhP
                  )}
                />

                <DiagramCard
                  className={classNames(
                    "__wab_instance",
                    sty.diagramCard__dAXdb
                  )}
                />
              </Stack__>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2___82WFn
                )}
              >
                {"Analyze Your Written Communications"}
              </h2>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ddRNx
                )}
              >
                {
                  "NarcShield AI will learn your particular communication needs and identify problematic methods in both manipulation towards you and strategies we naturally employ that might not ultimately be in our best interest. Send your messages across all written formats and mediums to receive real time assistance!"
                }
              </div>
            </div>
          </Section>
          <Section
            data-plasmic-name={"deviceSection"}
            data-plasmic-override={overrides.deviceSection}
            background={"dark"}
            className={classNames("__wab_instance", sty.deviceSection)}
            size={
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? "mobile"
                : undefined
            }
          >
            <h2
              className={classNames(
                projectcss.all,
                projectcss.h2,
                projectcss.__wab_text,
                sty.h2__c7Vp2
              )}
            >
              {"Stop feeling hurt after every conversation."}
            </h2>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__wktFn
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly")
                ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \neiusmod tempor incididunt ut labore et dolore magna aliqua."
                : '\ud83e\udd2f "If you\u2019ve ever walked away from a conversation feeling confused, guilty, or like the \u2018bad guy\u2019\u2026 You\u2019ve been DARVO\u2019d."\n\n\ud83d\udd25 "Emotional manipulators use DARVO, gaslighting, and blame-shifting to control the narrative\u2014until now."\n\n\ud83d\ude80 "NarcShield.io is the first AI built to recognize manipulation in real-time and train you to break the cycle."'}
            </div>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__fk7Qe)}
              displayHeight={"484px"}
              displayMaxHeight={"none"}
              displayMaxWidth={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "360px"
                  : "100%"
              }
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"776px"}
              loading={"lazy"}
              src={{
                src: "/plasmic/narc_shield_io/images/macbookPng.png",
                fullWidth: 900,
                fullHeight: 565,
                aspectRatio: undefined
              }}
            />
          </Section>
          <Section
            data-plasmic-name={"productSection"}
            data-plasmic-override={overrides.productSection}
            className={classNames("__wab_instance", sty.productSection)}
            size={
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? "mobile"
                : undefined
            }
          >
            <div className={classNames(projectcss.all, sty.freeBox__hRXlO)}>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__pxO
                )}
              >
                {"Features"}
              </h2>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__sSsu8
                )}
              >
                {
                  "Simplicity and peace of mind is what you need most right now. NarcShield.io has you covered."
                }
              </div>
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__viAjj
                )}
                component={Link}
                href={"#"}
                platform={"nextjs"}
              >
                <Button
                  className={classNames("__wab_instance", sty.button___1Ux3H)}
                  label={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__erLk4
                      )}
                    >
                      {"Get Started"}
                    </div>
                  }
                  size={"large"}
                />
              </PlasmicLink__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__sgoQn)}
              >
                <ProductCard
                  data-plasmic-name={"step1"}
                  data-plasmic-override={overrides.step1}
                  className={classNames("__wab_instance", sty.step1)}
                />

                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__dRyD
                  )}
                />
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__kqlHf)}
              >
                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__ehifI
                  )}
                />

                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__mX40
                  )}
                />
              </Stack__>
            </div>
          </Section>
          <Section
            data-plasmic-name={"aboutSection"}
            data-plasmic-override={overrides.aboutSection}
            background={"dark"}
            className={classNames("__wab_instance", sty.aboutSection)}
            size={
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? "mobile"
                : undefined
            }
          >
            <div className={classNames(projectcss.all, sty.freeBox__jtwHx)}>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__l83Qh
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "What people say \nabout us"
                  : "What people say about us"}
              </h2>
              <div className={classNames(projectcss.all, sty.freeBox__bGv)}>
                <div className={classNames(projectcss.all, sty.freeBox__r8NbY)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__ldIhB)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "339px"
                        : "100%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/narc_shield_io/images/aboutImgPng.png",
                      fullWidth: 400,
                      fullHeight: 500,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__zNgd)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__xxhjg
                    )}
                  >
                    {"Michael Justin"}
                  </h2>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___0Y6AM)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__xdOnI)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/narc_shield_io/images/aboutIpsumPng.png",
                        fullWidth: 152,
                        fullHeight: 40,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__g9L6G
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "CEO Company"
                        : "CEO Company"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__yTuc2)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__e9NMn)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "auto"
                          : "auto"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/narc_shield_io/images/backtipPng.png",
                        fullWidth: 34,
                        fullHeight: 32,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__alMuy
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                      : "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."}
                  </div>
                </div>
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__b8WU)}
              >
                <DetailAbout
                  className={classNames(
                    "__wab_instance",
                    sty.detailAbout__giGIf
                  )}
                />

                <DetailAbout
                  className={classNames(
                    "__wab_instance",
                    sty.detailAbout___7Ibsr
                  )}
                />

                <DetailAbout
                  className={classNames(
                    "__wab_instance",
                    sty.detailAbout__tTblN
                  )}
                />
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ozWik)}
              >
                <DetailAbout
                  className={classNames(
                    "__wab_instance",
                    sty.detailAbout__rUFeJ
                  )}
                />

                <DetailAbout
                  className={classNames(
                    "__wab_instance",
                    sty.detailAbout__lTd9S
                  )}
                />

                <DetailAbout
                  className={classNames(
                    "__wab_instance",
                    sty.detailAbout__f6FLo
                  )}
                />
              </Stack__>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__dma5C)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/narc_shield_io/images/arrowLeftPng.png",
                  fullWidth: 24,
                  fullHeight: 24,
                  aspectRatio: undefined
                }}
              />

              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__mgLW)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/narc_shield_io/images/arrowRightPng2.png",
                  fullWidth: 24,
                  fullHeight: 24,
                  aspectRatio: undefined
                }}
              />
            </div>
          </Section>
          <PriceSection
            data-plasmic-name={"priceSection"}
            data-plasmic-override={overrides.priceSection}
            className={classNames("__wab_instance", sty.priceSection)}
          />

          <Section
            data-plasmic-name={"startSection"}
            data-plasmic-override={overrides.startSection}
            className={classNames("__wab_instance", sty.startSection)}
            size={"fullContentWidth"}
          >
            <div className={classNames(projectcss.all, sty.freeBox__x2Zsk)}>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__prQMu)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/narc_shield_io/images/pricingImgSvg.svg",
                  fullWidth: 300,
                  fullHeight: 67,
                  aspectRatio: 4.468401
                }}
              />

              <div className={classNames(projectcss.all, sty.columns__qOonN)}>
                <div className={classNames(projectcss.all, sty.column__b298B)}>
                  <h3
                    data-plasmic-name={"h3"}
                    data-plasmic-override={overrides.h3}
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Start using our product today"
                      : "Start using our product today"}
                  </h3>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__buh4X
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Faster than free analytics tools. Access to all your data, with respect to the privacy of your users."
                      : "Faster than free analytics tools. Access to all your data, with respect to the privacy of your users."}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column__ef38Z)}>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__dYofR
                    )}
                    component={Link}
                    href={"#"}
                    platform={"nextjs"}
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button___8JGk
                      )}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__dsnN
                          )}
                        >
                          {"Get Started"}
                        </div>
                      }
                      size={"extraLarge"}
                      type={"soft"}
                    />
                  </PlasmicLink__>
                </div>
              </div>
            </div>
          </Section>
          <Section
            data-plasmic-name={"pricingSection"}
            data-plasmic-override={overrides.pricingSection}
            className={classNames("__wab_instance", sty.pricingSection)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__r9Af6)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__gG1Pj)}
              >
                <div className={classNames(projectcss.all, sty.column__sILg)}>
                  <PriceCard
                    borders={["flatLeft"]}
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__qBdpf
                    )}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__nqR4)}>
                  <PriceCard
                    borders={["flatCenter"]}
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard___7GDf
                    )}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__aOrN4)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dAbLr
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "We Recommended"
                        : "We Recommended"}
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column__edep)}>
                  <PriceCard
                    borders={["flatRight"]}
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__tJvSe
                    )}
                  />
                </div>
              </Stack__>
            </div>
          </Section>
          <FooterSection
            data-plasmic-name={"footerSection"}
            data-plasmic-override={overrides.footerSection}
            className={classNames("__wab_instance", sty.footerSection)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "headerHeroSection",
    "navbar",
    "h1",
    "svg",
    "diagramSection",
    "deviceSection",
    "productSection",
    "step1",
    "aboutSection",
    "priceSection",
    "startSection",
    "h3",
    "pricingSection",
    "footerSection"
  ],
  headerHeroSection: ["headerHeroSection", "navbar", "h1", "svg"],
  navbar: ["navbar"],
  h1: ["h1"],
  svg: ["svg"],
  diagramSection: ["diagramSection"],
  deviceSection: ["deviceSection"],
  productSection: ["productSection", "step1"],
  step1: ["step1"],
  aboutSection: ["aboutSection"],
  priceSection: ["priceSection"],
  startSection: ["startSection", "h3"],
  h3: ["h3"],
  pricingSection: ["pricingSection"],
  footerSection: ["footerSection"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  headerHeroSection: "div";
  navbar: typeof Navbar;
  h1: "h1";
  svg: "svg";
  diagramSection: typeof Section;
  deviceSection: typeof Section;
  productSection: typeof Section;
  step1: typeof ProductCard;
  aboutSection: typeof Section;
  priceSection: typeof PriceSection;
  startSection: typeof Section;
  h3: "h3";
  pricingSection: typeof Section;
  footerSection: typeof FooterSection;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    headerHeroSection: makeNodeComponent("headerHeroSection"),
    navbar: makeNodeComponent("navbar"),
    h1: makeNodeComponent("h1"),
    svg: makeNodeComponent("svg"),
    diagramSection: makeNodeComponent("diagramSection"),
    deviceSection: makeNodeComponent("deviceSection"),
    productSection: makeNodeComponent("productSection"),
    step1: makeNodeComponent("step1"),
    aboutSection: makeNodeComponent("aboutSection"),
    priceSection: makeNodeComponent("priceSection"),
    startSection: makeNodeComponent("startSection"),
    h3: makeNodeComponent("h3"),
    pricingSection: makeNodeComponent("pricingSection"),
    footerSection: makeNodeComponent("footerSection"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Home",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
